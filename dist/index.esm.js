function t(t,e,i,n,r,a){return t?[["c",...e],i?["a",t,t,0,0,1,...n.map((t=>t*i))]:[],["c",...r]]:[["l",...a]]}var e,i=new class{elements=new Map;constructor(){this.elements=new Map}addElement(t,e,i){this.unobserve(t);const{observe:n=!0,draw:r=!0,onResize:a}=e;if(n){let e=null,n=null;const h=new ResizeObserver((t=>{for(const h of t){const t=h.target.getBoundingClientRect();e===t.width&&n===t.height||(r&&i({width:t.width,height:t.height}),a?.(t,h.target),e=t.width,n=t.height)}}));h.observe(t),this.elements.set(t,{draw:i,element:t,observer:h})}return i}draw(t){t?this.elements.get(t)?.draw?.():this.elements.forEach((t=>t.draw?.()))}unobserve(t){const e=e=>{const i=this.elements.get(e);if(i){const{observer:e}=i;e?.disconnect(),this.elements.delete(t)}};t?e(t):this.elements.forEach((([,t])=>e(t)))}};function n({width:i=0,height:n=0,smoothing:r=1,radius:a=0,offset:h=0,type:s=e.Squircle,precision:o=4,isArray:c=!1}){if(!i||!n)return c?[]:"";const d=s===e.Squircle,l=Array.isArray(h)?h:[h,h,h,h],[u,g,f,p]=l,m=i-p-g,w=n-u-f,b=.5*Math.min(m,w),M=(Array.isArray(a)?a:[a,a,a,a]).map(((t,e)=>Math.max(0,Math.min(t-l[e],b))));let v;switch(s){case e.Round:v=v=function({width:t,height:e,radii:i,offsets:n}){const[r,,,a]=n,[h,s,o,c]=i;return[["M",a+c,r],["L",t-s+a,r],["A",s,s,0,0,1,t+a,r+s],["L",t+a,e-o+r],["A",o,o,0,0,1,t-o+a,e+r],["L",a+c,e+r],["A",c,c,0,0,1,a,e-c+r],["L",a,r+h],["A",h,h,0,0,1,a+h,r],["Z"]]}({width:m,height:w,radii:M,offsets:l});break;case e.Flat:v=v=function({width:t,height:e,radii:i,offsets:n}){const[r,,,a]=n,[h,s,o,c]=i;return[["M",a+h,r],["L",t-s+a,r],["L",t+a,r+s],["L",t+a,e-o+r],["L",t-o+a,e+r],["L",a+c,e+r],["L",a,e-c+r],["L",a,r+h],["Z"]]}({width:m,height:w,radii:M,offsets:l});break;case e.Squircle:case e.FigmaSquircle:default:v=function({width:e,height:i,smoothing:n,radii:r,offsets:a,preserveSmoothing:h}){const[s,,,o]=a,[c,d,l,u]=r.map((t=>function(t,e,i,n){let r=(1+e)*t;i||(e=Math.min(e,n/t-1),r=Math.min(r,n));const a=.5*Math.PI*(1-e),h=Math.sin(a/2)*t*2**.5,s=.25*Math.PI*e,o=t*Math.tan(.25*(.5*Math.PI-a))*Math.cos(s),c=o*Math.tan(s);let d=(r-h-o-c)/3,l=2*d;if(i&&r>n){const t=n-c-h-o,e=t-t/6;d=Math.min(d,e),l=t-d,r=Math.min(r,n)}return{a:l,b:d,c:o,d:c,p:r,arcLength:h,radius:t,ab:l+d,bc:d+o,abc:l+d+o}}(t,n,h,.5*Math.min(e,i))));return[["M",e-d.p+o,s],...t(d.radius,[d.a,0,d.ab,0,d.abc,d.d],d.arcLength,[1,1],[d.d,d.c,d.d,d.bc,d.d,d.abc],[d.p,0]),["L",e+o,i-l.p+s],...t(l.radius,[0,l.a,0,l.ab,-l.d,l.abc],l.arcLength,[-1,1],[-l.c,l.d,-l.bc,l.d,-l.abc,l.d],[0,l.p]),["L",u.p+o,i+s],...t(u.radius,[-u.a,0,-u.ab,0,-u.abc,-u.d],u.arcLength,[-1,-1],[-u.d,-u.c,-u.d,-u.bc,-u.d,-u.abc],[-u.p,0]),["L",o,c.p+s],...t(c.radius,[0,-c.a,0,-c.ab,c.d,-c.abc],c.arcLength,[1,-1],[c.c,-c.d,c.bc,-c.d,c.abc,-c.d],[0,-c.p]),["Z"]]}({width:m,height:w,smoothing:r,radii:M,offsets:l,preserveSmoothing:d})}return v=v.filter((t=>t[0])).map((([t,...e])=>{const i=e.map((t=>Number.isFinite(t)?Number(t.toFixed(o)):t)),n=[t,c?i:i.join(" ")];return c?n:n.join("")})),c?v:v.join("")}function r(t,e){const r=i=>{if(!e.width||!e.height){const i=t.getBoundingClientRect();e.width=i.width,e.height=i.height}const r={...e,...i};r.isRounded&&(r.width=r.width?Math.round(r.width):void 0,r.height=r.height?Math.round(r.height):void 0),e.clip&&(t.style.clipPath=`path('${n(r)}')`),(e.color||e.border)&&(t.style.backgroundImage=function(t){const{border:e=[],offset:i=0,strokeDrawType:r=0,color:a,clip:h,clipID:s,width:o,height:c}=t,d=[],l=Array.isArray(e?.[0])?e:[e],u=Array.isArray(i)?i:[i,i,i,i],g=n(t);if(l?.length){let e=0;const s=[];for(let a=0;a<l.length;a++){const[h,o]=l[a],c=0===r?2*(e+h):h;s.push(`<path d="${n({...t,offset:0===r?i:u.map((t=>t+e+.5*h))})}" fill="none" stroke="${o}" stroke-width="${c}" />`),e+=h}a&&(h?d.push(`<rect width="${o}" height="${c}" fill="${a}" />`):d.push(`<path d="${g}" fill="${a}" />`)),d.push(...s.reverse())}return d.length?function(t,e,i="c"){return`url('data:image/svg+xml,${function(t){return encodeURIComponent(t).replace(/%20/g," ").replace(/%3D/g,"=").replace(/%3A/g,":").replace(/%2F/g,"/").replace(/%2C/g,",").replace(/%3B/g,";")}((n=(e?[`<defs><clipPath id="${i}"><path d="${e}" /></clipPath></defs>`,`<g clip-path="url(#${i})">${t.join("")}</g>`]:t).join(""),`<svg xmlns="http://www.w3.org/2000/svg">${n}</svg>`))}')`;var n}(d,g,s):"none"}(r))};return r(),i.addElement(t,e,r)}function a(t){i.draw(t)}function h(t){i.unobserve(t)}!function(t){t.Squircle="squircle",t.FigmaSquircle="figma-squircle",t.Flat="flat",t.Round="round"}(e||(e={}));export{e as CornerType,r as addCorners,n as createPath,a as draw,h as unobserve};
