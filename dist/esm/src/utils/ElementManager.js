var e=new(function(){function e(){this.elements=new Map,this.elements=new Map}return e.prototype.addElement=function(e,t,n){this.untrack(e);var r,i=t.track,o=void 0===i||i,l=t.observe,a=void 0===l||l,s=t.draw,u=void 0===s||s,v=t.onResize;if(a){var d=null,h=null;(r=new ResizeObserver((function(e){for(var t=0,r=e;t<r.length;t++){var i=r[t],o=i.target.getBoundingClientRect();d===o.width&&h===o.height||(u&&n({width:o.width,height:o.height}),null==v||v(o,i.target),d=o.width,h=o.height)}}))).observe(e)}return o&&this.elements.set(e,{draw:n,element:e,observer:r}),n},e.prototype.draw=function(e){var t,n;e?null===(n=null===(t=this.elements.get(e))||void 0===t?void 0:t.draw)||void 0===n||n.call(t):this.elements.forEach((function(e){var t;return null===(t=e.draw)||void 0===t?void 0:t.call(e)}))},e.prototype.untrack=function(e){var t=this,n=function(n){var r=t.elements.get(n);if(r){var i=r.observer;null==i||i.disconnect(),t.elements.delete(e)}};e?n(e):this.elements.forEach((function(e){var t=e[1];return n(t)}))},e}());export{e as default};
